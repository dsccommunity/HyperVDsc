[ClassVersion("1.0.0.0"), FriendlyName("VMSwitch")]
class DSC_VMSwitch : OMI_BaseResource
{
    [Key, Description("The desired VM Switch name.")] String Name;
    [Key, Description("The desired type of switch."), ValueMap{"External","Internal","Private"}, Values{"External","Internal","Private"}] String Type;
    [Write, Description("Network adapter name(s) for external switch type.")] String NetAdapterName[];
    [Write, Description("Specify if the VM host has access to the physical NIC. The default value is `$false`.")] Boolean AllowManagementOS;
    [Write, Description("Should embedded NIC teaming be used (Windows Server 2016 or higher only). The default value is `$false`.")] Boolean EnableEmbeddedTeaming;
    [Write, Description("Specify the QoS mode used (options other than NA are only supported on Hyper-V 2012 or higher). The default value is `NA`."), ValueMap{"Default","Weight","Absolute","None","NA"}, Values{"Default","Weight","Absolute","None","NA"}] String BandwidthReservationMode;
    [Write, Description("Specify the Load Balancing algorithm which should be used for the embedded NIC teaming."), ValueMap{"Dynamic","HyperVPort"}, Values{"Dynamic","HyperVPort"}] String LoadBalancingAlgorithm;
    [Write, Description("Ensures that the VM Switch is Present or Absent. The default value is `Present`."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Specify the desired Unique ID of the Hyper-V switch. If not specified the ID will be generated by the system every time the Hyper-V Switch is created. (Windows Server 2016 or higher only)")] String Id;
    [Read, Description("Returns the description of the network interface.")] String NetAdapterInterfaceDescription;
};
